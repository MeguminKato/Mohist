--- a/net/minecraft/util/WorldOptimizer.java
+++ b/net/minecraft/util/WorldOptimizer.java
@@ -22,6 +22,8 @@
 import net.minecraft.util.math.ChunkPos;
 import net.minecraft.util.text.ITextComponent;
 import net.minecraft.util.text.TranslationTextComponent;
+import net.minecraft.world.Dimension;
+import net.minecraft.world.DimensionType;
 import net.minecraft.world.World;
 import net.minecraft.world.chunk.storage.ChunkLoader;
 import net.minecraft.world.chunk.storage.RegionFile;
@@ -35,7 +37,7 @@
 public class WorldOptimizer {
    private static final Logger field_212219_a = LogManager.getLogger();
    private static final ThreadFactory field_212220_b = (new ThreadFactoryBuilder()).setDaemon(true).build();
-   private final ImmutableSet<RegistryKey<World>> field_233529_c_;
+   private final ImmutableSet<RegistryKey<DimensionType>> field_233529_c_;
    private final boolean field_219957_d;
    private final SaveFormat.LevelSave field_212221_c;
    private final Thread field_212223_e;
@@ -46,12 +48,12 @@
    private volatile int field_212233_o;
    private volatile int field_212234_p;
    private volatile int field_212235_q;
-   private final Object2FloatMap<RegistryKey<World>> field_212544_m = Object2FloatMaps.synchronize(new Object2FloatOpenCustomHashMap<>(Util.func_212443_g()));
+   private final Object2FloatMap<RegistryKey<DimensionType>> field_212544_m = Object2FloatMaps.synchronize(new Object2FloatOpenCustomHashMap<>(Util.func_212443_g()));
    private volatile ITextComponent field_212236_r = new TranslationTextComponent("optimizeWorld.stage.counting");
    private static final Pattern field_219959_p = Pattern.compile("^r\\.(-?[0-9]+)\\.(-?[0-9]+)\\.mca$");
    private final DimensionSavedDataManager field_219960_q;
 
-   public WorldOptimizer(SaveFormat.LevelSave p_i231486_1_, DataFixer p_i231486_2_, ImmutableSet<RegistryKey<World>> p_i231486_3_, boolean p_i231486_4_) {
+   public WorldOptimizer(SaveFormat.LevelSave p_i231486_1_, DataFixer p_i231486_2_, ImmutableSet<RegistryKey<DimensionType>> p_i231486_3_, boolean p_i231486_4_) {
       this.field_233529_c_ = p_i231486_3_;
       this.field_219957_d = p_i231486_4_;
       this.field_233530_g_ = p_i231486_2_;
@@ -78,9 +80,9 @@
 
    private void func_212216_o() {
       this.field_212233_o = 0;
-      Builder<RegistryKey<World>, ListIterator<ChunkPos>> builder = ImmutableMap.builder();
+      Builder<RegistryKey<DimensionType>, ListIterator<ChunkPos>> builder = ImmutableMap.builder();
 
-      for(RegistryKey<World> registrykey : this.field_233529_c_) {
+      for(RegistryKey<DimensionType> registrykey : this.field_233529_c_) {
          List<ChunkPos> list = this.func_233532_b_(registrykey);
          builder.put(registrykey, list.listIterator());
          this.field_212233_o += list.size();
@@ -90,15 +92,15 @@
          this.field_212225_g = true;
       } else {
          float f1 = (float)this.field_212233_o;
-         ImmutableMap<RegistryKey<World>, ListIterator<ChunkPos>> immutablemap = builder.build();
-         Builder<RegistryKey<World>, ChunkLoader> builder1 = ImmutableMap.builder();
+         ImmutableMap<RegistryKey<DimensionType>, ListIterator<ChunkPos>> immutablemap = builder.build();
+         Builder<RegistryKey<DimensionType>, ChunkLoader> builder1 = ImmutableMap.builder();
 
-         for(RegistryKey<World> registrykey1 : this.field_233529_c_) {
-            File file1 = this.field_212221_c.func_237291_a_(registrykey1);
+         for(RegistryKey<DimensionType> registrykey1 : this.field_233529_c_) { // CraftBukkit
+            File file1 = this.field_212221_c.func_237291_a_(null); // CraftBukkit
             builder1.put(registrykey1, new ChunkLoader(new File(file1, "region"), this.field_233530_g_, true));
          }
 
-         ImmutableMap<RegistryKey<World>, ChunkLoader> immutablemap1 = builder1.build();
+         ImmutableMap<RegistryKey<DimensionType>, ChunkLoader> immutablemap1 = builder1.build();
          long i = Util.func_211177_b();
          this.field_212236_r = new TranslationTextComponent("optimizeWorld.stage.upgrading");
 
@@ -106,7 +108,7 @@
             boolean flag = false;
             float f = 0.0F;
 
-            for(RegistryKey<World> registrykey2 : this.field_233529_c_) {
+            for(RegistryKey<DimensionType> registrykey2 : this.field_233529_c_) {
                ListIterator<ChunkPos> listiterator = immutablemap.get(registrykey2);
                ChunkLoader chunkloader = immutablemap1.get(registrykey2);
                if (listiterator.hasNext()) {
@@ -119,7 +121,7 @@
                         int j = ChunkLoader.func_219165_a(compoundnbt);
                         CompoundNBT compoundnbt1 = chunkloader.func_235968_a_(registrykey2, () -> {
                            return this.field_219960_q;
-                        }, compoundnbt);
+                        }, compoundnbt, chunkpos, null); // CraftBukkit
                         CompoundNBT compoundnbt2 = compoundnbt1.func_74775_l("Level");
                         ChunkPos chunkpos1 = new ChunkPos(compoundnbt2.func_74762_e("xPos"), compoundnbt2.func_74762_e("zPos"));
                         if (!chunkpos1.equals(chunkpos)) {
@@ -187,8 +189,8 @@
       }
    }
 
-   private List<ChunkPos> func_233532_b_(RegistryKey<World> p_233532_1_) {
-      File file1 = this.field_212221_c.func_237291_a_(p_233532_1_);
+   private List<ChunkPos> func_233532_b_(RegistryKey<DimensionType> p_233532_1_) { // CraftBukkit
+      File file1 = this.field_212221_c.func_237291_a_(null); // CraftBukkit
       File file2 = new File(file1, "region");
       File[] afile = file2.listFiles((p_219954_0_, p_219954_1_) -> {
          return p_219954_1_.endsWith(".mca");
@@ -228,7 +230,7 @@
 
    @OnlyIn(Dist.CLIENT)
    public ImmutableSet<RegistryKey<World>> func_233533_c_() {
-      return this.field_233529_c_;
+      return null;
    }
 
    @OnlyIn(Dist.CLIENT)
